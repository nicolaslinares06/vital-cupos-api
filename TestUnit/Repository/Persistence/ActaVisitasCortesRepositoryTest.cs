using API.Helpers;
using Microsoft.Extensions.Configuration;
using Repository.Models;
using Repository.Persistence.Repository;
using System.Security.Claims;
using System.Security.Cryptography;
using static Repository.Helpers.Models.ActaVisitaCortesModel;
using Web.Models;
using Repository;
using Repository.Helpers;
using static Repository.Helpers.Models.PaginatioModels;

namespace TestUnit.Repository.Persistence
{
	public class ActaVisitasCortesRepositoryTest
	{
		//Se debe colocar un usuario administrador valido para la ejecucion de las pruebas unitarias
		private readonly DBContext _context;
		private readonly ActaVisitasCortesRepository repository;
		readonly JwtAuthenticationManager jwtAuthenticationManager;
        readonly string ipAddress = "1";
		private readonly ClaimsIdentity user;
        public readonly IConfiguration configuration;
		public readonly IGenericsMethodsHelper genericsMethodsHelper;

		public ActaVisitasCortesRepositoryTest()
		{
			var key = ECDsa.Create(ECCurve.NamedCurves.nistP256);
			var authenticationType = "AuthenticationTypes.Federation";

			user = new ClaimsIdentity(authenticationType);
			user.AddClaim(new Claim("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier", "1"));
			user.AddClaim(new Claim("aud", "CUPOS"));
			user.AddClaim(new Claim("exp", "1668005030"));
			user.AddClaim(new Claim("iat", "1668004130"));
			user.AddClaim(new Claim("nbf", "1668004130"));

			

			_context = new DBContext();

			jwtAuthenticationManager = new JwtAuthenticationManager(key);
			repository = new ActaVisitasCortesRepository(_context, jwtAuthenticationManager, configuration, genericsMethodsHelper ?? new GenericsMethodsHelper(_context));
		}

		[Fact]
		public void ConsultarEmpresas()
		{
			var r = repository.ConsultarEmpresas(user);
			Assert.True(r != null);

			r = repository.ConsultarEmpresas(new ClaimsIdentity());
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarDepartamentos()
		{
			var r = repository.ConsultarDepartamentos(user);
			Assert.True(r != null);

			r = repository.ConsultarDepartamentos(new ClaimsIdentity());
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarCiudadesPorDepartamento()
		{
			decimal departamentoId = 1;
			var r = repository.ConsultarCiudadesPorDepartamento(user, departamentoId);
			Assert.True(r != null);

			r = repository.ConsultarCiudadesPorDepartamento(new ClaimsIdentity(), departamentoId);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarEstablecimientosPorTipo()
		{
			decimal tipoEstablecimiento = 1;
			var r = repository.ConsultarEstablecimientosPorTipo(user, tipoEstablecimiento);
			Assert.True(r != null);

			r = repository.ConsultarEstablecimientosPorTipo(new ClaimsIdentity(), tipoEstablecimiento);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarEmpresaPorNit()
		{
			decimal nit = 897564231;
			var r = repository.ConsultarEmpresaPorNit(user, nit);
			Assert.True(r != null);

			nit = 999737334;
			r = repository.ConsultarEmpresaPorNit(user, nit);
			Assert.True(r != null);

			nit = 123154564;
			r = repository.ConsultarEmpresaPorNit(user, nit);
			Assert.True(r != null);

			r = repository.ConsultarEmpresaPorNit(new ClaimsIdentity(), nit);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarEstablecimientoPorTipo()
		{
			var r = repository.ConsultarEstablecimientoPorTipo(user);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarActasEstablecimientosPorId()
		{
			decimal idEstablecimento = 1;
			var r = repository.ConsultarActasEstablecimientosPorId(user, idEstablecimento);
			Assert.True(r != null);

			r = repository.ConsultarActasEstablecimientosPorId(new ClaimsIdentity(), idEstablecimento);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarActasEstablecimientosPorTipo()
		{
			VisitRecordsSearch datos = new VisitRecordsSearch();
			datos.EstablishmentId = 1;
			datos.EstablishmentTypeId = 1;
			datos.VisitDate = DateTime.Now;
			datos.SearchType = 1;

			var r = repository.ConsultarActasEstablecimientosPorTipo(user, datos);
			Assert.True(r != null);

			datos.SearchType = 2;

			r = repository.ConsultarActasEstablecimientosPorTipo(user, datos);
			Assert.True(r != null);

			datos.SearchType = 3;

			r = repository.ConsultarActasEstablecimientosPorTipo(user, datos);
			Assert.True(r != null);

			datos.SearchType = 4;

			r = repository.ConsultarActasEstablecimientosPorTipo(user, datos);
			Assert.True(r != null);

			datos.SearchType = 5;

			r = repository.ConsultarActasEstablecimientosPorTipo(user, datos);
			Assert.True(r != null);

			datos.SearchType = -1;

			r = repository.ConsultarActasEstablecimientosPorTipo(user, datos);
			Assert.True(r != null);

			r = repository.ConsultarActasEstablecimientosPorTipo(new ClaimsIdentity(), datos);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarDocumentosOrigenPiel()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarDocumentosOrigenPiel(user, idActaVisita);
			Assert.True(r != null);
		}


		[Fact]
		public void ConsultarActasPagination()
		{
			VisitRecordsSearch visitRecordsSearch = new VisitRecordsSearch();
			visitRecordsSearch.EstablishmentId = 1;
			visitRecordsSearch.EstablishmentTypeId = 1;
			visitRecordsSearch.VisitDate = DateTime.Now;
			visitRecordsSearch.SearchType = -1;

			// Arrange
			var paramsPaginations = new ParamsPaginations();

			// Act
			paramsPaginations.QuantityRecords = 10;
			paramsPaginations.QuantityPages = 2;
			paramsPaginations.TotalQuantity = 20;
			paramsPaginations.PageNumber = 1;
			paramsPaginations.QuantityRecordsForpage = 15;
			paramsPaginations.FilterCriterium = "SampleFilter";

			var r = repository.ConsultarActasPagination(user, visitRecordsSearch, paramsPaginations);
			Assert.True(r != null);

			visitRecordsSearch.SearchType = 1;

			r = repository.ConsultarActasPagination(user, visitRecordsSearch, paramsPaginations);
			Assert.True(r != null);

			visitRecordsSearch.SearchType = 2;
				
			r = repository.ConsultarActasPagination(user, visitRecordsSearch, paramsPaginations);
			Assert.True(r != null);

			visitRecordsSearch.SearchType = 3;

			r = repository.ConsultarActasPagination(user, visitRecordsSearch, paramsPaginations);
			Assert.True(r != null);

			visitRecordsSearch.SearchType = 4;
				
			r = repository.ConsultarActasPagination(user, visitRecordsSearch, paramsPaginations);
			Assert.True(r != null);

			visitRecordsSearch.SearchType = 5;

				r = repository.ConsultarActasPagination(user, visitRecordsSearch, paramsPaginations);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarDocumentosResolucion()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarDocumentosResolucion(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarDocumentosResolucion(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarDocumentosSavoConductos()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarDocumentosSavoConductos(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarDocumentosSavoConductos(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarTipoPielidentificablelActaVisita()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarTipoPielidentificablelActaVisita(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarTipoPielidentificablelActaVisita(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarTipoParteIdentificable()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarTipoParteIdentificable(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarTipoParteIdentificable(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarTipoPielIrregularActaVisita()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarTipoPielIrregularActaVisita(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarTipoPielIrregularActaVisita(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarTipoParteIrregular()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarTipoParteIrregular(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarTipoParteIrregular(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarArchivosActaVisita()
		{
			var dato = _context.CupostT018ActaVisitaArchivosDocumentos.FirstOrDefault(x => x.A018CodigoActaVisita != 0);
				
			var r = repository.ConsultarArchivosActaVisita(user, dato?.Pk_T018Codigo ?? 0);
			Assert.True(r != null);

			r = repository.ConsultarArchivosActaVisita(new ClaimsIdentity(), dato?.Pk_T018Codigo ?? 0);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarArchivoPrecintoActaVisita()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarArchivoPrecintoActaVisita(user, idActaVisita);
			Assert.True(r != null);

			r = repository.ConsultarArchivoPrecintoActaVisita(new ClaimsIdentity(), idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void ValidarDatosExcelPrecintos()
		{
			var dato = _context.CupostT001Empresas.FirstOrDefault(x => x.A001estadoRegistro != 0);

			string base64Excel = "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";
			var r = repository.ValidarDatosExcelPrecintos(user, base64Excel, dato?.A001nit ?? 0);
			Assert.True(r != null);

			r = repository.ValidarDatosExcelPrecintos(new ClaimsIdentity(), base64Excel, dato?.A001nit ?? 0);
			Assert.True(r != null);

			r = repository.ValidarDatosExcelPrecintos(user, base64Excel, 0);
			Assert.True(r != null);
		}

		[Fact]
		public void ConsultarActaVisitaporId()
		{
			decimal idActaVisita = 1;
			var r = repository.ConsultarActaVisitaporId(user, idActaVisita);
			Assert.True(r != null);
		}

		[Fact]
		public void CrearActaVisita()
		{
			CupostT007ActaVisitum datos = new CupostT007ActaVisitum();
			datos.PkT007codigo = 1;
			datos.A007codigoEntidad = 1;
			datos.A007codigoUsuarioCreacion = 1;
			datos.A007codigoUsuarioModificacion = 1;
			datos.A007codigoDocumentoOrigenPieles = 1;
			datos.A007codigoPrecintoymarquilla = 1;
			datos.A007codigoUsuarioAutoridadCites = 1;
			datos.A007firmaUsuarioAutoridadCites = Array.Empty<byte>();
			datos.A007fechaModificacion = 1;
			datos.A007fechaCreacion = 1;
			datos.A007fechaActa = DateTime.Now;
			datos.A007estadoRegistro = 1;
			datos.A007estadoPieles = "1";
			datos.A007cantidadPielesAcortar = 1;
			datos.A007observaciones = "1";
			datos.A007TipoActa = 1;
			datos.A007RepresentanteIdentificacion = 1;
			datos.A007RepresentanteNombre = "1";
			datos.A007CiudadDepartamento = 1;
			datos.A007VisitaNumero = 1;
			datos.A007VisitaNumero1 = true;
			datos.A007VisitaNumero2 = true;
			datos.A007PrecintoAdjunto = "1";

			var r = repository.CrearActaVisita(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void CrearActaVisitaIrregular()
		{
			CupostT007ActaVisitum datos = new CupostT007ActaVisitum();
			datos.PkT007codigo = 1;
			datos.A007codigoEntidad = 1;
			datos.A007codigoUsuarioCreacion = 1;
			datos.A007codigoUsuarioModificacion = 1;
			datos.A007codigoDocumentoOrigenPieles = 1;
			datos.A007codigoPrecintoymarquilla = 1;
			datos.A007codigoUsuarioAutoridadCites = 1;
			datos.A007firmaUsuarioAutoridadCites = Array.Empty<byte>();
            datos.A007fechaModificacion = 1;
			datos.A007fechaCreacion = 1;
			datos.A007fechaActa = DateTime.Now;
			datos.A007estadoRegistro = 1;
			datos.A007estadoPieles = "1";
			datos.A007cantidadPielesAcortar = 1;
			datos.A007observaciones = "1";
			datos.A007TipoActa = 1;
			datos.A007RepresentanteIdentificacion = 1;
			datos.A007RepresentanteNombre = "1";
			datos.A007CiudadDepartamento = 1;
			datos.A007VisitaNumero = 1;
			datos.A007VisitaNumero1 = true;
			datos.A007VisitaNumero2 = true;
			datos.A007PrecintoAdjunto = "1";

			var r = repository.CrearActaVisitaIrregular(user, datos);
			Assert.True(r != null);
		}

		[Fact]
		public void ActualizarActaVisita()
		{
			CupostT007ActaVisitum datos = new CupostT007ActaVisitum();
			datos.PkT007codigo = 1;
			datos.A007codigoEntidad = 1;
			datos.A007codigoUsuarioCreacion = 1;
			datos.A007codigoUsuarioModificacion = 1;
			datos.A007codigoDocumentoOrigenPieles = 1;
			datos.A007codigoPrecintoymarquilla = 1;
			datos.A007codigoUsuarioAutoridadCites = 1;
			datos.A007firmaUsuarioAutoridadCites = Array.Empty<byte>();
            datos.A007fechaModificacion = 1;
			datos.A007fechaCreacion = 1;
			datos.A007fechaActa = DateTime.Now;
			datos.A007estadoRegistro = 1;
			datos.A007estadoPieles = "1";
			datos.A007cantidadPielesAcortar = 1;
			datos.A007observaciones = "1";
			datos.A007TipoActa = 1;
			datos.A007RepresentanteIdentificacion = 1;
			datos.A007RepresentanteNombre = "1";
			datos.A007CiudadDepartamento = 1;
			datos.A007VisitaNumero = 1;
			datos.A007VisitaNumero1 = true;
			datos.A007VisitaNumero2 = true;
			datos.A007PrecintoAdjunto = "1";

			var r = repository.ActualizarActaVisita(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void DesHabilitarActaVisita()
		{
			decimal idActaVisita = 1;

			var r = repository.DesHabilitarActaVisita(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarTipoPielIdentificable()
		{
			CupostT008CortePiel datos = new CupostT008CortePiel();
			datos.A008codigo = 1;
			datos.A008codigoActaVisita = 1;
			datos.A008tipoCorte = "1";
			datos.A008tipoParte = "1";
			datos.A008tipoPiel = "1";
			datos.A008cantidad = 1;
			datos.A008total = 1;
			datos.A008areaPromedio = "1";

			var r = repository.InsertarTipoPielIdentificable(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertTipoParteIdentificable()
		{
			CupostT008CortePiel datos = new CupostT008CortePiel();
			datos.A008codigo = 1;
			datos.A008codigoActaVisita = 1;
			datos.A008tipoCorte = "1";
			datos.A008tipoParte = "1";
			datos.A008tipoPiel = "1";
			datos.A008cantidad = 1;
			datos.A008total = 1;
			datos.A008areaPromedio = "1";

			var r = repository.InsertTipoParteIdentificable(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarTipoPielIrregular()
		{
			CupostT008CortePiel datos = new CupostT008CortePiel();
			datos.A008codigo = 1;
			datos.A008codigoActaVisita = 1;
			datos.A008tipoCorte = "1";
			datos.A008tipoParte = "1";
			datos.A008tipoPiel = "1";
			datos.A008cantidad = 1;
			datos.A008total = 1;
			datos.A008areaPromedio = "1";

			var r = repository.InsertarTipoPielIrregular(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarTipoParteIrregular()
		{
			CupostT008CortePiel datos = new CupostT008CortePiel();
			datos.A008codigo = 1;
			datos.A008codigoActaVisita = 1;
			datos.A008tipoCorte = "1";
			datos.A008tipoParte = "1";
			datos.A008tipoPiel = "1";
			datos.A008cantidad = 1;
			datos.A008total = 1;
			datos.A008areaPromedio = "1";

			var r = repository.InsertarTipoParteIrregular(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarActaVisitaDocumentoorigenPiel()
		{
			CupostT015ActaVisitaDocumentoOrigenPiel datos = new CupostT015ActaVisitaDocumentoOrigenPiel();
			datos.PK_T015Codigo = 1;
			datos.A015CodigoActaVisita = 1;
			datos.A015DocumentoOrigenPielNumero = "1";
			datos.A015CodigoUsuarioCreacion = 1;
			datos.A015CodigoUsuarioModificacion = 1;
			datos.A015FechaCreacion = DateTime.Now;
			datos.A015FechaModificacion = DateTime.Now;

			var r = repository.InsertarActaVisitaDocumentoorigenPiel(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarActaVisitaResolucionNumero()
		{
			CupostT016ActaVisitaResolucion datos = new CupostT016ActaVisitaResolucion();
			datos.PK_T016Codigo = 1;
			datos.A016CodigoActaVisita = 1;
			datos.A016ResolucionNumero = 1;
			datos.A016CodigoUsuarioCreacion = 1;
			datos.A016CodigoUsuarioModificacion = 1;
			datos.A016FechaCreacion = DateTime.Now;
			datos.A016FechaModificacion = DateTime.Now;

			var r = repository.InsertarActaVisitaResolucionNumero(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarActaVisitaSAlvoConductoNumero()
		{
			CupostT017ActaVisitaSalvoConducto datos = new CupostT017ActaVisitaSalvoConducto();
			datos.PK_T017Codigo = 1;
			datos.A017CodigoActaVisita = 1;
			datos.A017SalvoConductoNumero = 1;
			datos.A017CodigoUsuarioCreacion = 1;
			datos.A017CodigoUsuarioModificacion = 1;
			datos.A017FechaCreacion = DateTime.Now;
			datos.A017FechaModificacion = DateTime.Now;

			var r = repository.InsertarActaVisitaSAlvoConductoNumero(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void EliminarDocumentosOrigenPiel()
		{
			decimal idActaVisita = 1;

			var r = repository.EliminarDocumentosOrigenPiel(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void EliminarDocResolucionActaVisita()
		{
			decimal idActaVisita = 1;

			var r = repository.EliminarDocResolucionActaVisita(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void EliminarDocsSalvoConductos()
		{
			decimal idActaVisita = 1;

			var r = repository.EliminarDocsSalvoConductos(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void EliminarTiposPielIdentificables()
		{
			decimal idActaVisita = 1;

			var r = repository.EliminarTiposPielIdentificables(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void EliminarTiposPartesIdentificables()
		{
			decimal idActaVisita = 1;

			var r = repository.EliminarTiposPartesIdentificables(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void EliminarArchivosActaVisita()
		{
			decimal idActaVisita = 1;

			var r = repository.EliminarArchivosActaVisita(user, idActaVisita, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void InsertarActaVisitaDocumento()
		{
			CupostT018ActaVisitaDocumentos datos = new CupostT018ActaVisitaDocumentos();
			datos.Pk_T018Codigo = 1;
			datos.A018CodigoActaVisita = 1;
			datos.A018RutaDocumento = "1";
			datos.A018CodigoUsuarioCreacion = 1;
			datos.A018CodigoUsuarioModificacion = 1;
			datos.A018FechaCreacion = DateTime.Now;
			datos.A018FechaModificacion = DateTime.Now;
			datos.A018NombreArchivo = "1";

			var r = repository.InsertarActaVisitaDocumento(user, datos, ipAddress);
			Assert.True(r != null);
		}

		[Fact]
		public void ObtenerDatosFTP()
		{
			var r = repository.ObtenerDatosFTP();
			Assert.True(r != null);
		}

		[Fact]
		public void ModificarCantidadCupoPrecintos()
		{
			string excelPrecintosBase64 = "1";
			decimal idEmpresa = 1;

			var r = repository.ModificarCantidadCupoPrecintos(user, excelPrecintosBase64, idEmpresa);
			Assert.True(r != null);
		}

		[Fact]
		public void IncrementarCantidadCupoPrecintos()
		{
			decimal idActavisita = 1;

			var r = repository.IncrementarCantidadCupoPrecintos(idActavisita);
			Assert.True(r != null);
		}
	}
}
